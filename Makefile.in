#
#	Makefile for 'Bignums'	(c) C. Jullien
#	$Id: Makefile.in,v 1.45 2014/06/28 15:47:22 jullien Exp $
#

.SUFFIXES: .cpp .lsp .dat $(.SUFFIXES)

# Automake special variables

prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@
bindir		= @bindir@
libdir		= @libdir@
mandir		= @mandir@
includedir	= @includedir@
datadir		= @datadir@
localedir	= @localedir@
infodir		= @infodir@

CC		= @CC@
CPP		= @CXX@
AR		= @AR@
VERSION		= @VERSION@
O		= @OBJEXT@
RANLIB		= @RANLIB@
SOEXT		= @SOEXT@
AEXT		= @AEXT@
EXE		= @EXEEXT@
ARFLAGS		= @AROPTS@
DEBUG		=
WITHPIC         =
CFLAGS		= @CFLAGS@ @OPTIMS@ @WARNINGS@ $(WITHPIC) -I. -DHAVE_CONFIG_H
CXXFLAGS	= @CXXFLAGS@
INSTALL		= ./conf/install-sh
LIBS		= @LIBS@
KERN		= kern
KRNLIB		= libkern.$(AEXT)
KRNSHARED	= libkern.$(SOEXT).$(VERSION)
LISP		= clisp
PGO		=
NOPRINTDIR	= --no-print-directory
OBJECT		= bigq.$(O) bigz.$(O) bign.$(O)
STRIP		=

BINARIES	= bztest$(EXE) \
		  testkern$(EXE) \
		  @NOCXX@tCBignum$(EXE)

all: libs $(BINARIES) tests

libs: @SHARED@ static-@STATIC_BUILD@

.c.$(O):
	@echo $*.c
	@$(CC) -c $(CFLAGS) $(PGO) $*.c

.cpp.$(O):
	@echo $*.cpp
	@$(CPP) -c $(CFLAGS) $(PGO) $(CXXFLAGS) $*.cpp

# KerN lib

bign.$(O): bign.c bign.h
bigz.$(O): bigz.c bigz.h bign.h
bign.$(O): bigq.c bigq.h bigz.h bign.h

shared-std:
	@echo Making shared lib $(KRNSHARED)
	@rm -r -f $(OBJECT)
	@$(MAKE) $(NOPRINTDIR) WITHPIC=-fPIC $(KRNSHARED)

static-std:
	@echo Making static lib $(KRNLIB)
	@rm -r -f $(OBJECT)
	@$(MAKE) $(NOPRINTDIR) WITHPIC= $(KRNLIB)

static-pgo:
	@rm -f *.o *.gcda *.a bztest$(EXE) testkern$(EXE)
	@echo Making $(KRNLIB) for Profile Guided Optimizations...
	@$(MAKE) $(NOPRINTDIR) WITHPIC= PGO=-fprofile-generate $(KRNLIB)
	@echo Making tests with $(KRNLIB) for Profile Guided Optimizations...
	@$(MAKE) $(NOPRINTDIR) WITHPIC= PGO=-fprofile-generate bztest$(EXE)
	@$(MAKE) $(NOPRINTDIR) WITHPIC= PGO=-fprofile-generate testkern$(EXE)
	@echo Collecting Profile Guided Optimizations from bztest/testkern...
	@./bztest> /dev/null 2>&1
	@./testkern A> /dev/null 2>&1
	@echo Making final $(KRNLIB) using Profile Guided Optimizations...
	@rm -f *.o
	@$(MAKE) $(NOPRINTDIR) WITHPIC= PGO=-fprofile-use $(KRNLIB)
	@rm -f *.gcda

$(KRNLIB): $(OBJECT)
	@rm -f $(KRNLIB)
	@$(AR) $(ARFLAGS) $(KRNLIB) $(OBJECT)
	-@$(RANLIB) $(KRNLIB)

$(KRNSHARED): $(OBJECT)
	@$(CC) $(CFLAGS) -shared -Wl,-soname,$(KRNSHARED) -o $(KRNSHARED) \
	       $(OBJECT)

# KerN test

testkern.$(O): bign.h test/testkern.c
	@$(CC) -c $(CFLAGS) $(PGO) -Itest test/testkern.c

testkern$(EXE): $(KRNLIB) testkern.$(O)
	@$(CC) $(CFLAGS) $(PGO) -o testkern$(EXE) testkern.$(O) -L. -l$(KERN) $(LIBS)

# BZ test

bztest$(EXE): $(KRNLIB) bztest.$(O)
	@$(CC) $(CFLAGS) $(PGO) -o bztest$(EXE) bztest.$O  -L. -l$(KERN)

bztest.$(O): test/bztest.c bigz.h bign.h
	@$(CC) -c $(CFLAGS) $(PGO) -Itest test/bztest.c

# C++ test

tCBignum$(EXE): $(KRNLIB) CBignum.$(O) CRational.$(O) tCBignum.$(O)
	@$(CPP) $(CFLAGS) $(PGO) -o tCBignum$(EXE) \
		tCBignum.$(O) CBignum.$(O) CRational.$(O) \
		-L. -l$(KERN)

tCBignum.dat: ./lisp/gentest.lsp
	@echo generating tests with $(LISP)..
	@$(LISP) ./lisp/gentest.lsp > tCBignum.cpp

CBignum.$(O): CBignum.h CBignum.cpp bigz.h bign.h

tCBignum.$(O): CBignum.h tCBignum.cpp tCBignum.dat bigz.h bign.h

CRational.$(O): CRational.h CRational.cpp bigz.h bign.h bigq.h

# Misc

tests:
	./testkern a
	./bztest
	@NOCXX@./tCBignum

clean:
	@-rm -f bztest$(EXE) testkern$(EXE) tCBignum$(EXE)
	@-rm -f *.$(O) *.$(AEXT) $(KRNSHARED)
	@-rm -f \#* *.BAK *~

valgrind:  testkern$(EXE) tCBignum$(EXE)
	@valgrind \
		--leak-check=summary \
		--track-fds=yes \
		--log-file=testkern.log \
		./testkern$(EXE) a
	@tail -10 testkern.log
	@echo Consult testkern.log for full log...
	@valgrind \
		--leak-check=summary \
		--track-fds=yes \
		--log-file=tCBignum.log \
		./tCBignum$(EXE)
	@tail -10 tCBignum.log
	@echo Consult tCBignum.log for full log...

lint:
#	set LARCH_PATH=/usr/share/splint/lib
#	Very strict rules for kernel
	@splint +quiet			\
		-checks 		\
		-exportlocal 		\
		-infloopsuncon		\
		-namechecks 		\
	        bign.c
#	Check bigz.c and (again) bign.c
	@splint +quiet			\
		-checks 		\
		-branchstate 		\
		-compdef 		\
		-exportlocal		\
		-infloopsuncon		\
		-namechecks		\
		-nullret 		\
		-retalias 		\
		-statictrans 		\
		-observertrans		\
		-temptrans 		\
		-usedef			\
	        bigz.c bign.c
	@splint +quiet			\
		-checks 		\
		-branchstate 		\
		-compdef 		\
		-declundef		\
		-exportlocal 		\
		-infloopsuncon		\
		-namechecks 		\
		-nullret 		\
		-mustfreefresh 		\
		-realcompare		\
		-realrelatecompare	\
		-temptrans 		\
	        bigq.c

MASTER		= \
		AUTHORS			      \
		COPYING			      \
		ChangeLog		      \
		LICENSE			      \
		NEWS			      \
		README			      \
		autogen.sh		      \
		bign.c			      \
		bign.h			      \
		bigq.c			      \
		bigq.h			      \
		bigz.c			      \
		bigz.h			      \
		bzf.c			      \
		bignum.pc.in		      \
		bignum.spec.in		      \
		CBignum.cpp		      \
		CBignum.h		      \
		CRational.cpp		      \
		CRational.h		      \
		conf/config.guess	      \
		conf/config.sub		      \
		conf/COPYING		      \
		conf/install-sh		      \
		config.h.in		      \
		configure		      \
		configure.ac		      \
		doc/bn.html		      \
		doc/bn.tex		      \
		doc/bnbody.html		      \
		doc/bnbody.tex		      \
		doc/bnf.html		      \
		doc/bnf.tex		      \
		etc/hextable.c		      \
		etc/maxbase10.c		      \
		etc/maxbase10.lsp	      \
		etc/testbits.c		      \
		lisp/gentest.lsp	      \
		lisp/lisptests.lsp	      \
		lisp/lisprtnl.lsp	      \
		pdf/PRL-RR-2.pdf	      \
		pdf/RR-1016.pdf		      \
		pdf/RR-1016.ps		      \
	        m4/ax_check_compile_flag.m4   \
		Makefile.in		      \
		makefile.clang		      \
		makefile.gnu		      \
		makefile.lcc		      \
		makefile.nt		      \
		makefile.tcc		      \
		tCBignum.cpp		      \
		tCBignum.dat		      \
		tCBignum.dat		      \
		test/BntoBnn.h		      \
		test/bztest.c		      \
		test/testkern.c

save:
	@rm -r -f bignum-$(VERSION).tar.gz
	@touch bignum-$(VERSION).tar.gz
	@tar czf bignum-$(VERSION).tar.gz $(MASTER)
	@mkdir bignum-$(VERSION) \
		&& cd bignum-$(VERSION) \
		&& tar xzf ../bignum-$(VERSION).tar.gz \
		&& cd .. \
		&& tar czf bignum-$(VERSION).tar.gz bignum-$(VERSION) \
		&& rm -r -f bignum-$(VERSION)
	@tar tvzf bignum-$(VERSION).tar.gz

install-strip:
	@$(MAKE) $(NOPRINTDIR) STRIP=-s install

install:
	@echo Installing includes and libs
	$(INSTALL) -d $(bindir)
	$(INSTALL) -d $(mandir)
	$(INSTALL) -d $(mandir)/man1
	$(INSTALL) -d $(includedir)/@NAME@
	$(INSTALL) -d $(libdir)/pkgconfig
	for i in big*h ; \
	do \
	  $(INSTALL) -C -m 644 $$i $(includedir)/@NAME@/$$i; \
	done
	for i in $(KRNLIB) $(KRNSHARED) ; \
	do \
	  if [ -f $$i ]; \
	  then \
	    echo $$i; \
	    $(INSTALL) -C -m 644 -T $$i $(libdir)/$$i; \
	  fi \
	done
	(cd $(libdir) && ln -sf $(KRNSHARED) lib$(KERN).$(SOEXT).1)
	(cd $(libdir) && ln -sf lib$(KERN).$(SOEXT).1 lib$(KERN).$(SOEXT))
	$(INSTALL) -C -m 644 -T @NAME@.pc $(libdir)/pkgconfig/@NAME@.pc

uninstall:
	@echo Uninstalling includes and libs
	rm -r -f $(includedir)/@NAME@
	for i in lib$(KERN) ; \
	do \
	  rm -f $(libdir)/$$i\.*; \
	done
	rm -f $(libdir)/pkgconfig/@NAME@.pc
	@echo Done.
