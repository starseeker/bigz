Bignum (c) DEC, INRIA, ILOG, Eligis
Maintained by C. Jullien - Eligis.

The  Bignum  package was originally written by DEC & INRIA to provide
an  efficient infinite arithmetic precision module on top of Le-Lisp.
Chistian  Jullien  from  Eligis  decided  to  use  and  maintain this
package  for  it's  own  Lisp  implementation called OpenLisp (a full
ISO/IEC 13816:2007(E) ISLISP Language implementation).

On 2011-12-05, Bernard-Paul Serpette from INRIA granted C. Jullien
the persmission to create a sourceforge projet under BSD License to
continue this development.

This directory contains the C/C++ source code for BigNum.

   Documentation files:
	doc/bn.tex      - Document BigNum in LaTeX format
	doc/bnf.tex     - Document BigNum in French and LaTeX format
	doc/makeidx.sty	- macro used in BigNum document

   C Include Files:
	bign.h		- Types and structures for clients of BigNum
	bigz.h		- Types and structures for clients of BigZ

   C Source Code:
	bign.c	        - BigNum implementation ("kernel" routines)
	bigz.c		- BigZ implementation
	bzf.c		- Miscellaneous functions built on top of BigZ
	bztest.c	- Test program for verifying a BigNum implementation
	testkern.c	- Test program for verifying KerN implementation

   C++ Source Code:
	CBignum.h	- C++ Wrapper class on top of BigZ
	CBignum.cpp	- Non inlined functions
	tCBignum.cpp	- C++ non-regression test
	tCBignum.dat	- C++ non-regression test (generated by gentest.lsp)

   Lisp Source Code:
	gentest.lsp	- CLtL code used to generate tCBignum.dat file

If you have the tools LaTeX, makeindex and aptex, type:
	make doc	- to build the Postscript files of the documents

You can retrieve the source code on sourceforge using;

  svn checkout svn://svn.code.sf.net/p/bigz/code-0/trunk bigz-code-0
